#+begin_src emacs-lisp
  (use-package ewal)
  (use-package ewal-doom-themes
    :init
    (load-theme 'ewal-doom-one t))

  (use-package doom-modeline
    :init
    (setq doom-modeline-height 40)
    (setq doom-modeline-buffer-encoding nil)
    (doom-modeline-mode))

  ;; TODO: Contextual solaire
  (use-package solaire-mode
    :hook
    (prog-mode . solaire-mode))

  (fringe-mode 0)

  (use-package centaur-tabs
    :init
    (setq centaur-tabs-height 16)
    (setq centaur-tabs-style "bar")
    (setq centaur-tabs-set-icons t)
    (setq centaur-tabs-icon-scale-factor 0.7)
    (setq centaur-tabs-set-bar 'left)
    (setq x-underline-at-descent-line t)
    (defun contextual-tabs ()
      (interactive)
      (if (and (centaur-tabs-mode-on-p) (eq (derived-mode-p 'prog-mode) nil))
	  (centaur-tabs-local-mode)))
    (defun centaur-tabs-hide-tab (x)
      (let ((name (format "%s" x)))
	(or
	 (window-dedicated-p (selected-window))
	 (string-match-p (regexp-quote "<") name)
	 (string-prefix-p "*lsp" name)
	 (string-prefix-p "*Compile-Log*" name)
	 (string-prefix-p "*company" name)
	 (string-prefix-p "*compilation" name)
	 (string-prefix-p "*Help" name)
	 (string-prefix-p "*straight" name)
	 (string-prefix-p "*Flycheck" name)
	 (string-prefix-p "*tramp" name)
	 (string-prefix-p "*help" name)
	 (and (string-prefix-p "magit" name)
	      (not (file-name-extension name)))
	 )))
    (defun centaur-tabs-hide-tab-cached (x) (centaur-tabs-hide-tab x))
    (centaur-tabs-mode)
    :hook
    (after-change-major-mode . contextual-tabs)
    :bind
    ("H-l" . 'centaur-tabs-forward-tab)
    ("H-h" . 'centaur-tabs-backward-tab))

  (use-package treemacs
    :after doom-themes
    :init
    (doom-themes-treemacs-config)
    (setq doom-themes-treemacs-enable-variable-pitch nil)
    (setq doom-themes-treemacs-theme "doom-colors")
    (setq treemacs-width 30)
    (treemacs-project-follow-mode)
    :bind
    ("C-c t" . treemacs)
    :hook
    (treemacs-mode .
		   (lambda ()
		     (setq header-line-format " ")
		     (face-remap-add-relative 'header-line '(:height 20 :background "#0e121a"))
		     )
		   ))

  (use-package treemacs-projectile)

  (use-package treemacs-all-the-icons
    :after treemacs
    :init
    (treemacs-load-theme "all-the-icons"))

  (use-package olivetti
    :config
    (setq-default olivetti-body-width 180)
    :hook ((prog-mode . olivetti-mode)

#+end_src
